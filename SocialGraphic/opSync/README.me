1. Dump data from server

mongoexport -h host1.tiegushi.com:27017 -d hotShare -c users -o users.json -u hotShareAdmin -p aei_19056
mongoexport -h host1.tiegushi.com:27017 -d hotShare -c posts -o posts.json -u hotShareAdmin -p aei_19056
mongoexport -h host1.tiegushi.com:27017 -d hotShare -c viewers -o viewers.json -u hotShareAdmin -p aei_19056


2. Restore data to local db

mongoimport -h localhost:27017 -d localdb -c users --type=json  --file users.json
mongoimport -h localhost:27017 -d localdb -c posts --type=json  --file posts.json
mongoimport -h localhost:27017 -d localdb -c viewers --type=json  --file viewers.json



CREATE INDEX ON :User(userId);
CREATE INDEX ON :Post(postId);
CREATE INDEX ON :Post(ownerId);
#CREATE INDEX ON :Post(createdAt);
#CREATE INDEX ON :VIEWER(by);

#CREATE INDEX ON :Viewer(viewerId);
#CREATE INDEX ON :Viewer(postId);

MATCH (v:Viewer),(p:Post),(u:User)
WHERE v.postId=p.postId AND u.userId=v.viewerId
CREATE (u)-[:VIEWER]->(p);

MATCH (a:User),(b:User),(p:Post)
WHERE (a)-[:VIEWER]->(p)<-[:VIEWER]-(b)
CREATE (a)-[:MEET]->(b);

MATCH (a:User)-[:VIEWER]->(p:Post)<-[:VIEWER]-(b:User)
CREATE (a)-[:MEET]->(b);



看过当前帖子的人还看过最新的（8AfMD9Qy4fsFNPLrZ）：
MATCH (u:User)-[:VIEWER]->(p:Post),(u)-[vi:VIEWER]->(p1:Post) WHERE p.postId="8AfMD9Qy4fsFNPLrZ" return u,p1,p ORDER BY vi.by DESC LIMIT 20;

3. How to docker build/run
   rm -rf node_modules/
   docker build -t yourname/appname .
   docker run -t yourname/appname
